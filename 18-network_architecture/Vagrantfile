# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
:centralRouter => {
        :box_name => "centos/7",
        :net => [
				   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
				   {ip: '192.168.254.1', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
				   {ip: '192.168.253.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33', adapter: 6, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65', adapter: 7, netmask: "255.255.255.192", virtualbox__intnet: "wi-fi-net"},
                ]
  },
  
:centralServer => {
        :box_name => "centos/7",
        :net => [
					{ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                    {adapter: 3, auto_config: false, virtualbox__intnet: true},
					{adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
 },
	
:office1Router => {
          :box_name => "centos/7",
          :net => [
                      {ip: '192.168.254.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                      {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dev-net"},
                      {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "testserv-net"},
                      {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "mng-net"},
                      {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                  ]
 },

:office1Server => {
          :box_name => "centos/7",
          :net => [
                      {ip: '192.168.2.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dev-net"},
					{adapter: 3, auto_config: false, virtualbox__intnet: true},
                 ]
},

:office2Router => {
          :box_name => "centos/7",
          :net => [
                   {ip: '192.168.253.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.1.1', adapter: 3, netmask: "255.255.255.128", virtualbox__intnet: "dev-net"},
                   {ip: '192.168.1.129', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "testserv-net"},
                   {ip: '192.168.1.193', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                  ]
 },
	
:office2Server => {
          :box_name => "centos/7",
          :net => [
                      {ip: '192.168.1.2', adapter: 2, netmask: "255.255.255.128", virtualbox__intnet: "dev-net"},
						{adapter: 3, auto_config: false, virtualbox__intnet: true},
                     ]
 },
	
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
		box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

		box.vm.provision "shell", inline: <<-SHELL
		# для всех хостов выполнить команды
          		mkdir -p ~root/.ssh
				cp ~vagrant/.ssh/auth* ~root/.ssh
				yum install -y traceroute
        SHELL
        
		case boxname.to_s
		when "inetRouter"
			box.vm.provision "shell", inline: <<-SHELL
			# Включить форвардинг пакетов
			echo -e 'net.ipv4.conf.all.forwarding=1\nnet.ipv4.ip_forward=1' >> /etc/sysctl.conf
			sysctl -p
			# Включить NAT (выход в интернет через интерфейс Vagrant - eth0)
			iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
			# Прописываем роутинг, чтобы пакеты, предназначенные внутренним ip-адресам (а не внешним ip) направлялись от inetRouter к centraRouter (через шлюз  192.168.255.2) 
			# и далее уже разруливались с помощью таблицы маршрутизации CentralRouter
			echo "192.168.0.0/16 via 192.168.255.2" >  /etc/sysconfig/network-scripts/route-eth1
			# Перезапустить сеть
			service network restart
			SHELL
		when "centralRouter"
			box.vm.provision "shell", inline: <<-SHELL
			# Включить форвардинг пакетов (параметры в файле 99-override.conf перекрывают остальные)
			# Либо указываем как на других хостах через файл /etc/sysctl.conf
			echo -e 'net.ipv4.conf.all.forwarding=1\nnet.ipv4.ip_forward=1' >> /etc/sysctl.d/99-override.conf
			sysctl --system
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
			# Указываем шлюз по умолчанию для интерфейса eth1
			echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Прописываем роутинг, чтобы пакеты ходили от centralOffice в office1
			echo "192.168.2.0/24 via 192.168.254.2" >  /etc/sysconfig/network-scripts/route-eth1
			# Прописываем роутинг, чтобы пакеты ходили от centralOffice в office2
			echo "192.168.1.0/24 via 192.168.253.2" >> /etc/sysconfig/network-scripts/route-eth1
			# Перезапустить сеть
			systemctl restart network
			SHELL
		when "centralServer"
			box.vm.provision "shell", inline: <<-SHELL
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
			# Указываем шлюз по умолчанию для интерфейса eth1
			echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Перезапустить сеть
			systemctl restart network
			SHELL
		when "office1Router"
			box.vm.provision "shell", inline: <<-SHELL
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
			# Шлюз по умолчанию для интерфейса eth1
			echo "GATEWAY=192.168.254.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Включить форвардинг пакетов
			echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
			sysctl -p
			# Перезапустить сеть
			systemctl restart network
			SHELL
		when "office1Server"
			box.vm.provision "shell", inline: <<-SHELL
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
			# Шлюз по умолчанию для интерфейса eth1 
			echo "GATEWAY=192.168.2.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Удаляем маршрут из таблицы маршрутизации для интерфейса eth0 (Vagrant), чтобы исключить отправку пакетов на него
			ip route del default via 10.0.2.2 dev eth0
			# Прописываем новый маршрут для eth1 - пакеты, предназначенные для любых подсетей должны уходить на шлюз 192.168.2.1
			echo "0.0.0.0 0.0.0.0 via 192.168.2.1" >> /etc/sysconfig/network-scripts/route-eth1
			# Перезапустить сеть
			systemctl restart network
			SHELL
		when "office2Router"
			box.vm.provision "shell", inline: <<-SHELL
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
			# Шлюз по умолчанию для интерфейса eth1
			echo "GATEWAY=192.168.253.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Включить форвардинг пакетов
			echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
			sysctl -p
			# Перезапустить сеть
			systemctl restart network
			SHELL
		when "office2Server"
			box.vm.provision "shell", inline: <<-SHELL
			# Отключаем default gateway для интерфейса eth0 (Vagrant), чтобы пакеты не ходили в интернет через nat Vagrant
			echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
			# Шлюз по умолчанию для интерфейса eth1
			echo "GATEWAY=192.168.1.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
			# Перезапустить сеть
			systemctl restart network
			SHELL
		end
		 box.vm.provision "shell", inline: <<-SHELL
		# после поднятия каждого хоста в конце выполнить контрольный перезапуск сети, чтобы пофиксить проблему,
		# связанную с недоступностью серверов (приходилось перезапускать сеть вручную)
		/etc/init.d/network restart
        SHELL

      end

  end
  
  
end

